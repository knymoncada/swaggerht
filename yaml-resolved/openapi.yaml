openapi: 3.0.0
info:
  title: Price HT
  description: business object that represent price product of Tottus Corp
  contact:
    email: pmm_api_ht@tottus.com.pe
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/htds1/Price/1.0.0
  description: SwaggerHub API Auto Mocking
security:
- ApiKeyAuth: []
tags:
- name: Price
  description: price a product in a store
paths:
  /price:
    get:
      tags:
      - Price
      summary: Searches price for product and store.
      description: Get price of product and store.
      operationId: searchPrice
      parameters:
      - name: sku
        in: path
        description: code de product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: store
        in: path
        description: number store
        required: true
        style: simple
        explode: false
        schema:
          type: number
          format: int32
      responses:
        200:
          description: price product information requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/price'
        400:
          description: bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: sku not found
        405:
          description: store not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - oAuth2AuthCode:
        - read:price
    put:
      tags:
      - Price
      summary: update price of product in a store
      description: update price of product in a store
      operationId: PriceUpdated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/price'
        required: true
      responses:
        200:
          description: price successfully updated
        400:
          description: bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Product not Found
        405:
          description: Store not Found
        500:
          description: Internal server error
        501:
          description: Not Implemented
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - oAuth2AuthCode:
        - write:price
    post:
      tags:
      - Price
      description: created a price of product in a store
      operationId: PriceCreated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/price'
      responses:
        200:
          description: successful operation
        400:
          description: Error on legacy
      security:
      - oAuth2AuthCode:
        - write:price
  /price/{skuId}:
    get:
      tags:
      - PriceAllStore
      summary: searches price for product in all stores
      description: get product price in all store
      operationId: getPriceAllStore
      parameters:
      - name: skuId
        in: path
        description: sku a product
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/price'
        400:
          description: bad input parameter
      security:
      - oAuth2AuthCode:
        - read:price
  /price/{store}:
    get:
      tags:
      - PricesOfStore
      summary: get products from a store
      description: get all product price in a store
      operationId: getAllPricesAStore
      parameters:
      - name: store
        in: path
        description: store search
        required: true
        style: simple
        explode: false
        schema:
          type: number
      responses:
        200:
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/price'
        400:
          description: bad input parameter
      security:
      - oAuth2AuthCode:
        - read:price
components:
  schemas:
    taxes:
      type: object
      properties:
        tax:
          type: string
          description: name taxes apply of product
          example: IGV
        amountTax:
          type: number
          description: percent tax
          format: float
          example: 18.0
    detraction:
      type: object
      properties:
        codeDetraction:
          type: string
          description: code detraction when apply of product
          example: "0035"
        nameDetraction:
          type: string
          description: name of detraction when apply of product
          example: Carnes
        percentDetraction:
          type: number
          description: percent detraction when apply of product
          format: double
          example: 4.0
    price:
      required:
      - priceActive
      - priceRegular
      type: object
      properties:
        sku:
          maxLength: 12
          type: string
          description: product identifier
          example: "04142454"
        store:
          maxLength: 12
          type: integer
          description: store where apply price
          format: int32
          example: 123
        regularPrice:
          type: number
          description: price regular
          format: float
          example: 1515.0
        currentPrice:
          type: number
          description: price current, apply any promotion o reduction
          format: float
          example: 1505.0
        promotionPrice:
          type: number
          description: promotional price, apply any promotion o reduction
          format: float
          nullable: true
          example: 1000.0
        taxes:
          type: array
          description: taxes applied to the product
          nullable: true
          items:
            $ref: '#/components/schemas/taxes'
        detraction:
          $ref: '#/components/schemas/detraction'
    error:
      required:
      - userMessage
      type: object
      properties:
        userMessage:
          type: string
          description: User error message
          example: Unexpected error...
        internalMessage:
          type: string
          description: Internal system error message
          example: Internal error...
        moreInfo:
          type: string
          description: Additional error information
          example: for more information enter wwww.moreinfo.com
      description: Standard structure for unexpected errors
  securitySchemes:
    oAuth2AuthCode:
      type: oauth2
      description: For more information, see https://api.slack.com/docs/oauth
      flows:
        authorizationCode:
          authorizationUrl: https://slack.com/oauth/authorize
          tokenUrl: https://slack.com/api/oauth.access
          scopes:
            read:price: Read price a product in a store
            write:price: Read price a product in a store
