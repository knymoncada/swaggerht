openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/htds1/Price/1.0.0
info:
  description: entity that represent price product of Tottus Corp
  version: "1.0.0"
  title: Price
  contact:
    email: kmmoncada@tottus.com.pe
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-Domain: Merchandising Execution
  x-Capability: Price Planning & Execution
security:
- ApiKeyAuth: []
tags:
  - name: Price
    description: price a product in a store
paths:
  /price:
    get:
      tags:
        - Price
      summary: "Searches price for product and store."
      operationId: searchPrice
      description: "Get price of product and store."
      security: 
        - oAuth2AuthCode: 
          - read:price
      parameters:
        - in: path
          name: sku
          description: code de product
          required: true
          schema:
            type: string
          
        - in: path
          name: store
          description: number store 
          required: true
          schema:
            type: number
            format: int32
          
      responses:
        200:
          description: price product information requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/price'
        400:
          description: bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: sku not found
        405:
          description: store not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    
    post:
      tags:
        - Price
      operationId: PriceCreated
      description: created a price of product in a store
      security: 
        - oAuth2AuthCode: 
          - write:price
      requestBody: 
        content:
           application/json:
            schema:
              $ref: '#/components/schemas/price'
      responses:
        '200':
          description: successful operation
        '400':
          description: Error on legacy
    
    put:
      tags:
        - Price
      summary: "update price of product in a store"
      operationId: PriceUpdated
      description: "update price of product in a store"
      security: 
        - oAuth2AuthCode: 
          - write:price
      requestBody: 
        content:
           application/json:
            schema:
              $ref: '#/components/schemas/price'
        required: true
      responses:
        200:
          description: price successfully updated
        400:
          description: bad request
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Product not Found
        405:
          description: Store not Found
        500:
          description: Internal server error
        501:
          description: Not Implemented
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  
  /price/{skuId}:
    get:
      tags:
        - PriceAllStore
      summary: searches price for product in all stores
      operationId: getPriceAllStore
      description: get product price in all store
      security: 
        - oAuth2AuthCode: 
          - read:price
      parameters:
        - in: path
          name: skuId
          description: sku a product
          required: true
          schema:
            type: string
          
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/price'
        '400':
          description: bad input parameter
  
  /price/{store}:
    get:
      tags:
        - PricesOfStore
      summary: get products from a store
      operationId: getAllPricesAStore
      description: get all product price in a store
      security: 
        - oAuth2AuthCode: 
          - read:price
      parameters:
        - in: path
          name: store
          description: store search
          required: true
          schema:
            type: number
          
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/price'
        '400':
          description: bad input parameter
components:
  schemas:
    taxes:
      type: object
      properties:
        tax:
          type: string
          description: name taxes apply of product
          example: IGV
        amountTax:
          type: number
          format: float
          description: percent tax
          example: 18.00
    
    detraction:
      type: object
      properties:
        codeDetraction:
          type: string
          description: code detraction when apply of product
          example: '0035'
        nameDetraction:
          type: string
          description: name of detraction when apply of product
          example: 'Carnes'
        percentDetraction:
          type: number
          format: double
          description: percent detraction when apply of product
          example: 4.00
    
    price:
      type: object
      required:
        - priceRegular
        - priceActive
      properties:
        sku:
          type: string
          maxLength: 12
          description: product identifier
          example: "04142454"
        store:
          type: integer
          format: int32
          maxLength: 12
          description: store where apply price
          example: 123
        regularPrice:
          type: number
          format: float
          description: price regular
          example: 1515.00
        currentPrice:
          type: number
          format: float
          description: price current, apply any promotion o reduction
          example: 1505.00
        promotionPrice:
          nullable: true
          type: number
          format: float
          description: promotional price, apply any promotion o reduction
          example: 1000.00
        taxes:
          type: array
          nullable: true
          description: taxes applied to the product
          items:
            $ref: '#/components/schemas/taxes'
        detraction:
          nullable: true
          $ref: '#/components/schemas/detraction'
    
    error:
      required:
      - userMessage
      type: object
      properties:
        userMessage:
          type: string
          description: User error message
          example: Unexpected error...
        internalMessage:
          type: string
          description: Internal system error message
          example: Internal error...
        moreInfo:
          type: string
          description: Additional error information
          example: for more information enter wwww.moreinfo.com
      description: Standard structure for unexpected errors  
  securitySchemes:
    oAuth2AuthCode:
      type: oauth2
      description: For more information, see https://api.slack.com/docs/oauth
      flows: 
        authorizationCode:
          authorizationUrl: https://slack.com/oauth/authorize
          tokenUrl: https://slack.com/api/oauth.access
          scopes:
            read:price: Read price a product in a store
            write:price: Read price a product in a store